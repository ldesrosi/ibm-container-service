{{- range $i, $node := .Values.target.orderer.nodes }} 
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .name }}-{{ $.Release.Name | lower }}
spec:
  replicas: 1 
  template:
    metadata:
      labels:
        name: {{ .name }}-{{ $.Release.Name | lower }}
    spec:
      serviceAccountName: fabric-node
      containers:
      - name: {{ .name }}
        image: "{{ $.Values.images.orderers.repository}}:{{ $.Values.images.orderers.tag}}"
        imagePullPolicy: {{$.Values.images.orderers.pullPolicy}}
        command: ["sh", "-c", "orderer"]
        envFrom:
        - configMapRef:
            name: orderer-env-{{ .name }}-{{ $.Release.Name | lower }}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /orderer-config
          name: orderer-config
{{- if eq $i 0 }}
      initContainers:
      - name: init-orderer
        image: "{{ $.Values.images.tools.repository }}:{{ $.Values.images.tools.tag }}"
        imagePullPolicy: {{ $.Values.images.tools.pullPolicy }}
        command: ["sh", "-c", "chmod +x /orderer-config/setup.sh && /orderer-config/setup.sh"]
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /orderer-config
          name: orderer-config 
{{ end }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: orderer-pvc-{{ $.Release.Name | lower }}
      - name: orderer-config
        configMap:
          name: orderer-config-{{ $.Release.Name | lower }}
{{ end }}
