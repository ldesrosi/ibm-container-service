apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name | lower }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Release.Name | lower }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: fabric-node
      containers:
      - name: ca
        image: "{{ .Values.images.ca.repository}}:{{ .Values.images.ca.tag}}"
        imagePullPolicy: {{.Values.images.ca.pullPolicy}}
        command: ["sh", "-c", "fabric-ca-server start"]
        env:
        - name: FABRIC_CA_HOME
          value: /data/cas
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /ca-config
          name: ca-config
      initContainers:
      - name: init-ca
        image: "{{ .Values.images.tools.repository }}:{{ .Values.images.tools.tag }}"
        imagePullPolicy: {{.Values.images.ca.pullPolicy}}
        command: ["sh", "-c", "chmod +x /ca-config/setup.sh && /ca-config/setup.sh"]
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /ca-config
          name: ca-config  
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: ca-pvc-{{ .Release.Name | lower }}
      - name: ca-config
        configMap:
          name: ca-config-{{ .Release.Name | lower }}